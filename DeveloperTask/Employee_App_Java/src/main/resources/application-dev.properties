
server.port=8050

# Some properties *****************************************************************************************************************
#spring.mvc.view.prefix=/WEB-INF/views/
#spring.mvc.view.suffix=.jsp
logging.level.org.springframework.boot.web=debug
logging.level.org.springframework.boot.autoconfigure.data.rest=debug
logging.level.org.springframework.boot.autoconfigure.data.jpa=debug
logging.level.org.springframework.boot.autoconfigure.data.web=debug
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

logging.file = src/main/applogs/app.log

# Connection url for the database **************************************************************************************************
spring.datasource.url = jdbc:mysql://localhost:3306/${dbName}

# Username and password ************************************************************************************************************
spring.datasource.username = ${username}
spring.datasource.password = ${password}

spring.jackson.serialization.indent-output = true

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update

# Show or not log for each sql query ***********************************************************************************************
spring.jpa.show-sql = true
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true


# Giving a root path to the app : "locationwebapp"
#server.servlet.context-path = /personwebapp

spring.jpa.properties.javax.persistence.schema-generation.create-source = metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.action = create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target = src/main/resources/scripts/SQL/${dbName}.sql

# Email configurations [gmail allows connectiong on 587 port to use SMTP protocol]
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=springabcxyzboot@gmail.com
spring.mail.password=A4815162342z
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.auth=true












